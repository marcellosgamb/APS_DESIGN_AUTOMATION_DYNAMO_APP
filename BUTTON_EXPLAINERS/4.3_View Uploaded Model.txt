üîÑ COMPLETE FLOW - View Uploaded Revit Model Button

üéØ Step 1: Button in HTML
<button type="button" class="btn btn-success btn-sm w-100" id="btnViewUploadedModel" disabled>View Uploaded Revit Model</button>
This creates a green button labeled "View Uploaded Revit Model" on the webpage. It starts disabled until an RVT file is uploaded and translated.

‚ö†Ô∏è Step 2: JavaScript Event Handler
btnViewUploadedModel.addEventListener('click', (e) => {
    if (!uploadedFiles.rvtUrn) {
        return logMessage('No RVT file URN available. Please upload a Revit file first.');
    }
    openViewerWindow(uploadedFiles.rvtUrn, 'Original Model (Before)');
    logMessage('Opening original model in new viewer window...');
});
When someone presses the button, this code checks if an RVT file URN is available. If not, it shows an error. If available, it opens a viewer window.

üßπ Step 3: URN Creation During Upload
When an RVT file is uploaded, this code runs:
if (fileType === 'rvt') {
    response.objectId = uploadResult.objectId;
    response.urn = uploadResult.urn;
    
    io.to(socketId).emit('status', { message: `Starting model translation for viewer...` });
    try {
        await translateObject(uploadResult.urn);
        io.to(socketId).emit('status', { message: `Model translation started successfully.` });
    } catch (translateErr) {
        io.to(socketId).emit('status', { message: `Warning: Could not start translation: ${translateErr.message}` });
    }
}
The URN (Uniform Resource Name) is created when the RVT file is uploaded, and translation for the viewer is started automatically.

üì° Step 4: URN Creation Process
function urnify(objectId) {
    return Buffer.from(objectId).toString('base64').replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
}
The URN is created by converting the Autodesk object ID to a Base64-encoded string with URL-safe characters. This URN uniquely identifies your model in Autodesk's systems.

üñ•Ô∏è Step 5: Translation Process
async function translateObject(urn, rootFilename) {
    const headers = await getHeaders();
    headers['Content-Type'] = 'application/json';
    
    const body = {
        input: {
            urn: urn
        },
        output: {
            formats: [{
                type: 'svf2',
                views: ['2d', '3d']
            }]
        }
    };
    
    const response = await axios.post(`${MODEL_DERIVATIVE_URL}/designdata/job`, body, { headers });
    return response.data;
}
This function starts the translation process that converts your Revit file into SVF2 format that can be displayed in the Autodesk Viewer in web browsers.

üîß Step 6: Open Viewer Window
function openViewerWindow(urn, modelName) {
    const viewerUrl = `/viewer.html#${urn}`;
    const windowFeatures = 'width=1200,height=800,scrollbars=yes,resizable=yes';
    window.open(viewerUrl, `viewer_${urn}`, windowFeatures);
}
This function opens a new browser window/tab with the Autodesk Viewer loaded with your model's URN.

üì± Step 7: Enable Button After Upload
        if (fileType === 'rvt') {
            uploadedFiles.rvt = data.fileName;
            uploadedFiles.rvtUrn = data.urn;
            btnViewUploadedModel.disabled = false;
            logMessage(`RVT file uploaded with URN: ${data.urn}`);
        }
The button is enabled when an RVT file is successfully uploaded and its URN is stored.

üéØ What This Accomplishes:
- Opens the original Revit model in Autodesk Viewer
- Shows the "before" state of your model
- Allows 3D navigation and exploration of the model
- Provides visual reference for comparing with results
- Uses web-based viewer (no Revit installation required)

üìã Summary for Non-Coders:
1. User uploads RVT file which automatically creates URN and starts translation
2. Upload process enables "View Uploaded Revit Model" button
3. User presses "View Uploaded Revit Model" button
4. Browser checks if RVT URN is available
5. Browser opens new window with Autodesk Viewer
6. Viewer loads the original Revit model using the URN
7. User can navigate, zoom, and explore the 3D model in browser
8. This shows the "before" state of the model

The Autodesk Viewer is a web-based 3D viewer that lets you explore your Revit model without needing Revit installed. The model is displayed exactly as it was before your Dynamo script ran, giving you a visual reference point to compare with the results after automation. 