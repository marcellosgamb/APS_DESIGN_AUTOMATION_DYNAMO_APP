🔄 COMPLETE FLOW - Clear OSS Bucket Button

🎯 Step 1: Button in HTML
<button id="btnClearBucket" class="btn btn-danger">Clear OSS Bucket</button>
This creates a red button labeled "Clear OSS Bucket" on the webpage.

⚠️ Step 2: JavaScript Event Handler
btnClearBucket.addEventListener('click', (e) => {
    if (!confirm('Are you sure you want to delete your OSS Bucket?')) return;
    deleteData('/api/aps/bucket', 'Clearing OSS Bucket...', e.currentTarget);
});
When someone presses the button, this code runs. It shows a confirmation popup asking "Are you sure?". If they cancel, nothing happens. If they confirm, it calls the deleteData function.

🧹 Step 3: Clear Log & Disable Buttons
function clearLogAndDisableButtons(log, clickedButton) {
    clearLog();
    if (log) logMessage(log);
    allButtons.forEach(btn => {
        btn.disabled = true;
    });
}
This function clears the output window, shows the message "Clearing OSS Bucket...", and makes all buttons gray/unclickable so the user can't press anything else while this is running.

📡 Step 4: Send Request to Server
async function deleteData(url, log, clickedButton) {
    clearLogAndDisableButtons(log, clickedButton);
    try {
        const response = await fetch(url, {
            method: 'DELETE',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ socketId })
        });
The browser sends a DELETE request to the server at "/api/aps/bucket" along with a socket ID so the server knows which browser window to send updates to.

🖥️ Step 5: Server Processes the Delete
router.delete('/', async (req, res, next) => {
    const { socketId } = req.body;
    const io = req.app.get('io');
    try {
        const headers = await getHeaders();
        io.to(socketId).emit('status', { message: '--- Step: DELETE BUCKET ---' });
        io.to(socketId).emit('status', { message: `Deleting bucket: ${DA_CONFIG.BUCKET_NAME}...` });
        const deleteResponse = await axios.delete(`https://developer.api.autodesk.com/oss/v2/buckets/${DA_CONFIG.BUCKET_NAME}`, { headers });
        io.to(socketId).emit('status', { message: 'Bucket deleted.' });
        res.status(200).json(deleteResponse.data);
The server receives the request, gets authentication headers, then contacts Autodesk's cloud storage API to delete the entire bucket and all files inside it. It sends status messages back to the browser.

🔄 Step 6: Handle Missing Bucket
    } catch (err) {
        if (err.response && err.response.status === 404) {
            io.to(socketId).emit('status', { message: 'Bucket not found, skipping delete.' });
            res.status(404).json({ message: 'Bucket not found.' });
            return;
        }
If the bucket doesn't exist, the server shows a friendly message instead of an error. This prevents confusion if someone tries to delete a bucket that's already gone.

📱 Step 7: Show Results & Re-enable Buttons
        const data = await response.json();
        logMessage(`--- RESPONSE (Status: ${response.status}) ---`);
        logMessage(`<pre>${JSON.stringify(data, null, 2)}</pre>`);
    } finally {
        enableAllButtons(false);
    }
The browser receives the server's response and displays it in the output log. Then it makes all the buttons clickable again.

🎯 What Actually Gets Deleted:
- OSS Bucket (the cloud storage container)
- ALL uploaded files (run.rvt, run.dyn, run.json, pythonDependencies.zip, packages.zip, result.json, result.rvt)
- ALL viewer URNs (can't view models anymore)

📋 Summary for Non-Coders:
1. User presses red "Clear OSS Bucket" button
2. Popup asks "Are you sure you want to delete your OSS Bucket?"
3. If confirmed, all buttons become gray and output log clears
4. Browser sends delete request to server with connection ID
5. Server gets authentication and contacts Autodesk to delete cloud storage bucket
6. If bucket doesn't exist, shows "not found" instead of error
7. Server sends status updates that appear in the output log
8. Browser shows final response and makes buttons clickable again

This is like emptying your entire cloud storage locker and throwing away the key. All your uploaded files disappear forever. This is more destructive than "Clear DA Resources" because it deletes your actual project files, not just the automation setup.